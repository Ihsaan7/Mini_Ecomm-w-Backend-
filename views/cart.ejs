<%- include('./partials/header') %>

<div class="bg-gray-50 min-h-screen pt-20">
  <div class="max-w-7xl mx-auto px-4 py-8">
    <% if (user.cart && user.cart.length > 0) { %>
      <div class="flex flex-col lg:flex-row gap-8">
        <!-- Cart Items Section -->
        <div class="lg:w-2/3">
          <div class="space-y-4">
            <% user.cart.forEach(function(product, index) { %>
              <!-- Individual Cart Item Card -->
              <div class=" shadow-sm  overflow-hidden" data-product-id="<%= product._id %>" data-index="<%= index %>">
                <div class="flex p-4">
                  <!-- Product Image -->
                  <div class="flex-shrink-0 mr-4">
                    <div class="w-[300px] h-[300px]  overflow-hidden">
                      <% if (product.image) { %>
                        <img class="w-full h-full object-cover" 
                             src="data:image/jpeg;base64,<%= product.image.toString('base64') %>" 
                             alt="<%= product.name %>">
                      <% } else { %>
                        <div class="w-full h-full flex items-center justify-center" 
                             style="background-color: <%= product.bgColor || '#f3f4f6' %>;">
                          <div class="w-12 h-12 rounded" 
                               style="background-color: <%= product.textColor || '#6b7280' %>;">
                          </div>
                        </div>
                      <% } %>
                    </div>
                  </div>
                  
                  <!-- Product Details -->
                  <div class="flex-1">
                    <h3 class="text-lg font-medium text-gray-900 mb-2">
                      <%= product.name %>
                    </h3>
                    
                    <!-- Quantity Controls -->
                    <div class="flex items-center space-x-3 mb-3">
                      <% 
                        const finalPrice = product.discount > 0 ? 
                          Math.round(product.price * (1 - product.discount / 100)) : 
                          product.price;
                      %>
                      <button class="w-8 h-8 rounded-full border border-gray-300 hover:border-gray-400 flex items-center justify-center transition-colors" 
                              onclick="decreaseQuantity(<%= index %>)" data-price="<%= finalPrice %>">
                        <svg class="w-4 h-4 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4"></path>
                        </svg>
                      </button>
                      <span class="text-lg font-semibold min-w-[2rem] text-center" 
                            id="quantity-<%= index %>" data-price="<%= finalPrice %>">01</span>
                      <button class="w-8 h-8 rounded-full bg-gray-900 hover:bg-gray-800 flex items-center justify-center transition-colors" 
                              onclick="increaseQuantity(<%= index %>)" data-price="<%= finalPrice %>">
                        <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                        </svg>
                      </button>
                    </div>
                    
                    <!-- Price and Actions -->
                    <div class="flex items-center justify-between">
                      <div class="flex flex-col" id="item-total-<%= index %>">
                        <% if (product.discount > 0) { %>
                          <!-- Discounted Price Display -->
                          <div class="flex items-center space-x-2 mb-1">
                            <span class="text-sm text-gray-500 line-through">Rs. <%= product.price %></span>
                            <span class="text-xs bg-red-100 text-red-800 px-2 py-1 rounded font-medium">
                              <%= product.discount %>% OFF
                            </span>
                          </div>
                          <div class="text-lg font-bold text-gray-900">
                            Rs. <%= Math.round(product.price * (1 - product.discount / 100)) %>
                          </div>
                        <% } else { %>
                          <!-- Regular Price Display -->
                          <div class="text-lg font-bold text-gray-900">
                            Rs. <%= product.price %>
                          </div>
                        <% } %>
                      </div>
                      <button class="text-red-500 hover:text-red-700 text-sm font-medium" 
                              onclick="removeItem(<%= index %>)">
                        Remove
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            <% }); %>
          </div>
        </div>
        
        <!-- Right Sidebar - Order Summary -->
        <div class="lg:w-1/3">
          <div class=" shadow-sm  sticky top-8">
            <div class="p-6">
              <h3 class="text-lg font-semibold text-gray-900 mb-4">Order Summary</h3>
              
              <% 
                let totalMRP = 0;
                user.cart.forEach(product => {
                  const finalPrice = product.discount > 0 ? 
                    Math.round(product.price * (1 - product.discount / 100)) : 
                    product.price;
                  totalMRP += parseFloat(finalPrice);
                });
                let discount = 0;
                let platformFee = 20;
                let shippingFee = totalMRP > 500 ? 0 : 40;
                let totalAmount = totalMRP - discount + platformFee + shippingFee;
              %>
              
              <div class="space-y-3">
                <!-- Total MRP -->
                <div class="flex justify-between text-sm">
                  <span class="text-gray-600">Total MRP</span>
                  <span class="text-gray-900" id="sidebar-total-mrp">Rs. <%= totalMRP %></span>
                </div>
                
                <!-- Discount on MRP -->
                <div class="flex justify-between text-sm">
                  <span class="text-gray-600">Discount on MRP</span>
                  <span class="text-green-600" id="sidebar-discount">Rs. <%= discount %></span>
                </div>
                
                <!-- Platform Fee -->
                <div class="flex justify-between text-sm">
                  <span class="text-gray-600">Platform Fee</span>
                  <span class="text-gray-900" id="sidebar-platform-fee">Rs. <%= platformFee %></span>
                </div>
                
                <!-- Shipping Fee -->
                <div class="flex justify-between text-sm">
                  <span class="text-gray-600">Shipping Fee</span>
                  <span class="<%= shippingFee === 0 ? 'text-green-600' : 'text-gray-900' %>" id="sidebar-shipping-fee">
                    <%= shippingFee === 0 ? "FREE" : `Rs. ${shippingFee}` %>
                  </span>
                </div>
                
                <% if (shippingFee > 0) { %>
                  <div class="text-xs text-blue-600 mt-2">
                    Add Rs. <span id="free-shipping-amount"><%= 500 - totalMRP %></span> more for free shipping
                  </div>
                <% } %>
                
                <hr class="border-gray-200 my-4">
                
                <!-- Total Amount -->
                <div class="flex justify-between items-center text-base font-semibold">
                  <span class="text-gray-900">Total Amount</span>
                  <span class="text-green-600" id="sidebar-total-amount">Rs. <%= totalAmount %></span>
                </div>
              </div>
              
              <!-- Checkout Button -->
              <button class="w-full mt-6 bg-gray-900 text-white py-3 px-4  font-medium hover:bg-gray-800 transition-colors">
                Proceed to Checkout
              </button>
              
              <!-- Continue Shopping Link -->
              <a href="/shop" class="block text-center text-gray-600 hover:text-gray-800 mt-3 text-sm">
                Continue Shopping
              </a>
              
              <!-- Security Badge -->
              <div class="mt-4 flex items-center justify-center text-xs text-gray-500">
                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                </svg>
                Secure Checkout
              </div>
            </div>
          </div>
        </div>
        </div>
      </div>
    <% } else { %>
      <!-- Empty Cart State -->
      <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-16 text-center max-w-lg mx-auto">
        <div class="w-24 h-24 mx-auto mb-6 bg-gray-100 rounded-full flex items-center justify-center">
          <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
          </svg>
        </div>
        <h3 class="text-xl font-semibold text-gray-900 mb-3">Your cart is empty</h3>
        <p class="text-gray-500 mb-6">Add some amazing products to get started</p>
        <a href="/shop" class="inline-flex items-center px-6 py-3 bg-gray-900 text-white rounded-lg hover:bg-gray-800 transition-colors font-semibold">
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
          </svg>
          Continue Shopping
        </a>
      </div>
    <% } %>
  </div>
</div>

<!-- JavaScript for Cart Functionality -->
<script>
  function increaseQuantity(index) {
    const quantityElement = document.getElementById(`quantity-${index}`);
    const itemTotalElement = document.getElementById(`item-total-${index}`);
    const price = parseFloat(quantityElement.dataset.price);
    
    let currentQuantity = parseInt(quantityElement.textContent);
    currentQuantity++;
    quantityElement.textContent = currentQuantity.toString().padStart(2, '0');
    
    const newItemTotal = price * currentQuantity;
    // Update the price in the last div (the actual price display)
    const priceDisplay = itemTotalElement.querySelector('div:last-child') || itemTotalElement;
    priceDisplay.textContent = `Rs. ${newItemTotal}`;
    
    // Update sidebar totals
    updateSidebarTotals();
    
    // Add subtle animation
    itemTotalElement.style.transform = 'scale(1.05)';
    setTimeout(() => {
      itemTotalElement.style.transform = 'scale(1)';
    }, 200);
  }

  function decreaseQuantity(index) {
    const quantityElement = document.getElementById(`quantity-${index}`);
    const itemTotalElement = document.getElementById(`item-total-${index}`);
    const price = parseFloat(quantityElement.dataset.price);
    
    let currentQuantity = parseInt(quantityElement.textContent);
    if (currentQuantity > 1) {
      currentQuantity--;
      quantityElement.textContent = currentQuantity.toString().padStart(2, '0');
      
      const newItemTotal = price * currentQuantity;
      // Update the price in the last div (the actual price display)
      const priceDisplay = itemTotalElement.querySelector('div:last-child') || itemTotalElement;
      priceDisplay.textContent = `Rs. ${newItemTotal}`;
      
      // Update sidebar totals
      updateSidebarTotals();
      
      // Add subtle animation
      itemTotalElement.style.transform = 'scale(1.05)';
      setTimeout(() => {
        itemTotalElement.style.transform = 'scale(1)';
      }, 200);
    }
  }


  function updateSidebarTotals() {
    let totalMRP = 0;
    const quantityElements = document.querySelectorAll('[id^="quantity-"]');
    
    quantityElements.forEach((element) => {
      const itemContainer = element.closest('div[class*="shadow-sm"]');
      // Check if item is visible (not removed)
      if (itemContainer && itemContainer.style.display !== 'none' && itemContainer.style.opacity !== '0') {
        const quantity = parseInt(element.textContent);
        const price = parseFloat(element.dataset.price);
        if (!isNaN(quantity) && !isNaN(price)) {
          totalMRP += price * quantity;
        }
      }
    });

    const discount = 0;
    const platformFee = totalMRP > 0 ? 20 : 0; // Only add platform fee if there are items
    const shippingFee = totalMRP > 500 ? 0 : (totalMRP > 0 ? 40 : 0); // Only add shipping if there are items
    const totalAmount = totalMRP - discount + platformFee + shippingFee;

    // Update sidebar display
    const totalMRPElement = document.getElementById('sidebar-total-mrp');
    const discountElement = document.getElementById('sidebar-discount');
    const platformFeeElement = document.getElementById('sidebar-platform-fee');
    const shippingFeeElement = document.getElementById('sidebar-shipping-fee');
    const totalAmountElement = document.getElementById('sidebar-total-amount');
    const freeShippingElement = document.getElementById('free-shipping-amount');
    
    if (totalMRPElement) totalMRPElement.textContent = `Rs. ${totalMRP}`;
    if (discountElement) discountElement.textContent = `Rs. ${discount}`;
    if (platformFeeElement) platformFeeElement.textContent = `Rs. ${platformFee}`;
    if (totalAmountElement) totalAmountElement.textContent = `Rs. ${totalAmount}`;
    
    if (shippingFeeElement) {
      if (shippingFee === 0) {
        shippingFeeElement.textContent = "FREE";
        shippingFeeElement.className = "text-green-600";
      } else {
        shippingFeeElement.textContent = `Rs. ${shippingFee}`;
        shippingFeeElement.className = "text-gray-900";
      }
    }
    
    if (freeShippingElement && totalMRP > 0) {
      const remaining = Math.max(0, 500 - totalMRP);
      freeShippingElement.textContent = remaining;
      freeShippingElement.parentElement.style.display = remaining > 0 ? 'block' : 'none';
    }
  }
  
  function removeItem(index) {
    if (confirm('Are you sure you want to remove this item from your cart?')) {
      const itemElement = document.querySelector(`#quantity-${index}`).closest('div[class*="shadow-sm"]');
      if (itemElement) {
        // Get the product ID from the data attribute
        const productId = itemElement.getAttribute('data-product-id');
        
        // Make API call to remove from database
        fetch(`/removeCart/${productId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          }
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            // Animate item removal
            itemElement.style.transform = 'translateX(100%)';
            itemElement.style.opacity = '0';
            itemElement.style.transition = 'all 0.5s ease';
            
            setTimeout(() => {
              itemElement.style.display = 'none';
              updateSidebarTotals();
              checkEmptyCart();
            }, 500);
          } else {
            alert('Error removing item from cart. Please try again.');
          }
        })
        .catch(error => {
          console.error('Error:', error);
          alert('Error removing item from cart. Please try again.');
        });
      }
    }
  }

  function checkEmptyCart() {
    const visibleItems = document.querySelectorAll('[id^="quantity-"]');
    const hiddenItems = Array.from(visibleItems).filter(el => {
      const container = el.closest('div[class*="shadow-sm"]');
      return container && (container.style.display === 'none' || container.style.opacity === '0');
    });
    
    if (visibleItems.length === hiddenItems.length) {
      setTimeout(() => {
        window.location.reload();
      }, 1000);
    }
  }
  


  // Initialize on page load
  document.addEventListener('DOMContentLoaded', function() {
    // Add transition styles to total elements
    const totalElements = document.querySelectorAll('[id^="item-total-"]');
    totalElements.forEach(element => {
      element.style.transition = 'transform 0.2s ease';
    });
    
    // Add hover effects to quantity buttons
    const quantityButtons = document.querySelectorAll('button[onclick*="Quantity"]');
    quantityButtons.forEach(button => {
      button.addEventListener('mouseenter', () => {
        button.style.transform = 'scale(1.05)';
      });
      button.addEventListener('mouseleave', () => {
        button.style.transform = 'scale(1)';
      });
    });
  });
</script>

<%- include('./partials/footer') %>
